version: "3.6"

networks:
    historic:
        driver: bridge

volumes:
    data:
        driver: local

services:
    php:
        build: docker/php/dev
        networks:
            - historic
        user: www-data
        volumes:
            - ./app:/var/www/html/:delegated,rw
            - /etc/timezone:/etc/timezone
            - ./docker/php/dev/config/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
        links:
            - db
        extra_hosts:
            - "host.docker.internal:host-gateway"
    nginx:
        image: nginx:1.21-alpine
        ports:
            - ${NGINX_HTTP_PORT}:80
            - ${NGINX_HTTPS_PORT}:80
        networks:
            - historic
        links:
            - php
        volumes:
            - ./app:/var/www/html/
            - /etc/timezone:/etc/timezone
            - ./docker/data/nginx/log:/var/log/nginx
            - ./docker/config/nginx:/etc/nginx/conf.d
        restart: always

    db:
        image: postgres:14.3-alpine
        networks:
            - historic
        ports:
            - ${DB_CUSTOM_PORT}:5432
        volumes:
            - /etc/timezone:/etc/timezone
            - ./docker/data/db:/var/lib/postgresql
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
    zookeeper:
        image: 'bitnami/zookeeper:latest'
        ports:
        - '2181:2181'
        environment:
        - ALLOW_ANONYMOUS_LOGIN=yes
        networks:
        - historic
    kafka:
        image: 'bitnami/kafka:latest'
        ports:
        - '9092:9092'
        environment:
        - KAFKA_BROKER_ID=1
        - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
        - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
        - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
        - ALLOW_PLAINTEXT_LISTENER=yes
        - KAFKA_CLIENT_USERS=historic
        - KAFKA_CLIENT_PASSWORDS=historic
        volumes:
            - './config/kafka:/opt/bitnami/kafka/config/certs'
        networks:
            - historic
        depends_on:
            - zookeeper